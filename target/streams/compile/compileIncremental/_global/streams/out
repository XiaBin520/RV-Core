[0m[[0m[0mdebug[0m] [0m[0m[zinc] IncrementalCompile -----------[0m
[0m[[0m[0mdebug[0m] [0m[0mIncrementalCompile.incrementalCompile[0m
[0m[[0m[0mdebug[0m] [0m[0mprevious = Stamps for: 111 products, 19 sources, 4 libraries[0m
[0m[[0m[0mdebug[0m] [0m[0mcurrent source = Set(${BASE}/src/main/scala/miniCore/alu.scala, ${BASE}/src/main/scala/miniCore/WordALU.scala, ${BASE}/src/main/scala/miniCore/EXStage.scala, ${BASE}/src/main/scala/miniCore/IDStage.scala, ${BASE}/src/main/scala/miniCore/MEM_WB.scala, ${BASE}/src/main/scala/miniCore/CoreCtrl.scala, ${BASE}/src/main/scala/miniCore/IDEX.scala, ${BASE}/src/main/scala/miniCore/core.scala, ${BASE}/src/main/scala/miniCore/IFStage.scala, ${BASE}/src/main/scala/miniCore/testScala.scala, ${BASE}/src/main/scala/miniCore/EX_MEM.scala, ${BASE}/src/main/scala/miniCore/dataPath.scala, ${BASE}/src/main/scala/miniCore/PC.scala, ${BASE}/src/main/scala/miniCore/IF_ID.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m> initialChanges = InitialChanges(Changes(added = Set(), removed = Set(${BASE}/src/main/scala/miniCore/ctrlCore.scala, ${BASE}/src/main/scala/miniCore/immSext.scala, ${BASE}/src/main/scala/miniCore/idStage.scala, ${BASE}/src/main/scala/miniCore/decoder.scala, ${BASE}/src/main/scala/miniCore/RegFile.scala), changed = Set(${BASE}/src/main/scala/miniCore/WordALU.scala, ${BASE}/src/main/scala/miniCore/EXStage.scala), unmodified = ...),Set(),Set(),API Changes: Set())[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes:[0m
[0m[[0m[0mdebug[0m] [0m[0m	removed: Set(${BASE}/src/main/scala/miniCore/decoder.scala, ${BASE}/src/main/scala/miniCore/RegFile.scala, ${BASE}/src/main/scala/miniCore/idStage.scala, ${BASE}/src/main/scala/miniCore/immSext.scala, ${BASE}/src/main/scala/miniCore/ctrlCore.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set(${BASE}/src/main/scala/miniCore/WordALU.scala, ${BASE}/src/main/scala/miniCore/EXStage.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(miniCore.WordALU_ID_IO, miniCore.WordALU, miniCore.WordALU_MEM_IO, miniCore.WordALU_IO)[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(miniCore.WordALU_ID_IO, miniCore.WordALU, miniCore.WordALU_MEM_IO, miniCore.WordALU_IO)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(${BASE}/src/main/scala/miniCore/WordALU.scala, ${BASE}/src/main/scala/miniCore/EXStage.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: miniCore.WordALU_ID_IO, miniCore.WordALU, miniCore.WordALU_MEM_IO, miniCore.WordALU_IO[0m
[0m[[0m[0mdebug[0m] [0m[0mcompilation cycle 1[0m
[0m[[0m[0minfo[0m] [0m[0mcompiling 2 Scala sources to /home/xiabin/workstation/CPU-Core/RV-Core/target/scala-2.12/classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.7.1:compile for Scala 2.12.13[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler ac9617b for Scala compiler version 2.12.13[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-feature[0m
[0m[[0m[0mdebug[0m] [0m[0m	-language:reflectiveCalls[0m
[0m[[0m[0mdebug[0m] [0m[0m	-Xplugin:/home/xiabin/.cache/coursier/v1/https/repo1.maven.org/maven2/edu/berkeley/cs/chisel3-plugin_2.12.13/3.5.0/chisel3-plugin_2.12.13-3.5.0.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/home/xiabin/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.12.13/scala-library-2.12.13.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/home/xiabin/workstation/CPU-Core/RV-Core/target/scala-2.12/classes:/home/xiabin/.cache/coursier/v1/https/repo1.maven.org/maven2/edu/berkeley/cs/chisel3_2.12/3.5.0/chisel3_2.12-3.5.0.jar:/home/xiabin/.cache/coursier/v1/https/repo1.maven.org/maven2/edu/berkeley/cs/chiseltest_2.12/0.5.0/chiseltest_2.12-0.5.0.jar:/home/xiabin/.cache/coursier/v1/https/repo1.maven.org/maven2/edu/berkeley/cs/chisel3-macros_2.12/3.5.0/chisel3-macros_2.12-3.5.0.jar:/home/xiabin/.cache/coursier/v1/https/repo1.maven.org/maven2/edu/berkeley/cs/chisel3-core_2.12/3.5.0/chisel3-core_2.12-3.5.0.jar:/home/xiabin/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-reflect/2.12.13/scala-reflect-2.12.13.jar:/home/xiabin/.cache/coursier/v1/https/repo1.maven.org/maven2/com/lihaoyi/os-lib_2.12/0.8.0/os-lib_2.12-0.8.0.jar:/home/xiabin/.cache/coursier/v1/https/repo1.maven.org/maven2/edu/berkeley/cs/treadle_2.12/1.5.0/treadle_2.12-1.5.0.jar:/home/xiabin/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scalatest/scalatest_2.12/3.1.4/scalatest_2.12-3.1.4.jar:/home/xiabin/.cache/coursier/v1/https/repo1.maven.org/maven2/com/lihaoyi/utest_2.12/0.7.9/utest_2.12-0.7.9.jar:/home/xiabin/.cache/coursier/v1/https/repo1.maven.org/maven2/net/java/dev/jna/jna/5.10.0/jna-5.10.0.jar:/home/xiabin/.cache/coursier/v1/https/repo1.maven.org/maven2/edu/berkeley/cs/firrtl_2.12/1.5.0/firrtl_2.12-1.5.0.jar:/home/xiabin/.cache/coursier/v1/https/repo1.maven.org/maven2/com/lihaoyi/geny_2.12/0.7.0/geny_2.12-0.7.0.jar:/home/xiabin/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/modules/scala-jline/2.12.1/scala-jline-2.12.1.jar:/home/xiabin/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scalactic/scalactic_2.12/3.1.4/scalactic_2.12-3.1.4.jar:/home/xiabin/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/modules/scala-xml_2.12/1.2.0/scala-xml_2.12-1.2.0.jar:/home/xiabin/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-sbt/test-interface/1.0/test-interface-1.0.jar:/home/xiabin/.cache/coursier/v1/https/repo1.maven.org/maven2/org/portable-scala/portable-scala-reflect_2.12/0.1.1/portable-scala-reflect_2.12-0.1.1.jar:/home/xiabin/.cache/coursier/v1/https/repo1.maven.org/maven2/org/antlr/antlr4-runtime/4.9.3/antlr4-runtime-4.9.3.jar:/home/xiabin/.cache/coursier/v1/https/repo1.maven.org/maven2/com/google/protobuf/protobuf-java/3.18.0/protobuf-java-3.18.0.jar:/home/xiabin/.cache/coursier/v1/https/repo1.maven.org/maven2/com/github/scopt/scopt_2.12/3.7.1/scopt_2.12-3.7.1.jar:/home/xiabin/.cache/coursier/v1/https/repo1.maven.org/maven2/net/jcazevedo/moultingyaml_2.12/0.4.2/moultingyaml_2.12-0.4.2.jar:/home/xiabin/.cache/coursier/v1/https/repo1.maven.org/maven2/org/json4s/json4s-native_2.12/3.6.12/json4s-native_2.12-3.6.12.jar:/home/xiabin/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/commons/commons-text/1.9/commons-text-1.9.jar:/home/xiabin/.cache/coursier/v1/https/repo1.maven.org/maven2/io/github/alexarchambault/data-class_2.12/0.2.5/data-class_2.12-0.2.5.jar:/home/xiabin/.cache/coursier/v1/https/repo1.maven.org/maven2/org/fusesource/jansi/jansi/1.11/jansi-1.11.jar:/home/xiabin/.cache/coursier/v1/https/repo1.maven.org/maven2/com/github/nscala-time/nscala-time_2.12/2.22.0/nscala-time_2.12-2.22.0.jar:/home/xiabin/.cache/coursier/v1/https/repo1.maven.org/maven2/org/yaml/snakeyaml/1.26/snakeyaml-1.26.jar:/home/xiabin/.cache/coursier/v1/https/repo1.maven.org/maven2/org/json4s/json4s-core_2.12/3.6.12/json4s-core_2.12-3.6.12.jar:/home/xiabin/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/commons/commons-lang3/3.11/commons-lang3-3.11.jar:/home/xiabin/.cache/coursier/v1/https/repo1.maven.org/maven2/joda-time/joda-time/2.10.1/joda-time-2.10.1.jar:/home/xiabin/.cache/coursier/v1/https/repo1.maven.org/maven2/org/joda/joda-convert/2.2.0/joda-convert-2.2.0.jar:/home/xiabin/.cache/coursier/v1/https/repo1.maven.org/maven2/org/json4s/json4s-ast_2.12/3.6.12/json4s-ast_2.12-3.6.12.jar:/home/xiabin/.cache/coursier/v1/https/repo1.maven.org/maven2/org/json4s/json4s-scalap_2.12/3.6.12/json4s-scalap_2.12-3.6.12.jar:/home/xiabin/.cache/coursier/v1/https/repo1.maven.org/maven2/com/thoughtworks/paranamer/paranamer/2.8/paranamer-2.8.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from miniCore.EXStage_MEM_IO...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: miniCore.EXStage_MEM_IO[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(miniCore.EXStage_MEM_IO)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(miniCore.EXStage_MEM_IO,ModifiedNames(changes = UsedName(do_asTypeOf,[Default]), UsedName(pathName,[Default]), UsedName(_bindingToString,[Default]), UsedName(!=,[Default]), UsedName(parentModName,[Default]), UsedName(toTarget,[Default]), UsedName(circuitName,[Default]), UsedName(earlyName,[Default]), UsedName(miniCore;EXStage_MEM_IO;init;,[Default]), UsedName(direction_=,[Default]), UsedName(autoSeed,[Default]), UsedName(lref,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(cloneTypeFull,[Default]), UsedName(parentPathName,[Default]), UsedName(litValue,[Default]), UsedName(asUInt,[Default]), UsedName(isWidthKnown,[Default]), UsedName(_usingPlugin,[Default]), UsedName(getOptionRef,[Default]), UsedName(compileOptions,[Implicit]), UsedName(hashCode,[Default]), UsedName(setAllParents,[Default]), UsedName(_id,[Default]), UsedName(getRef,[Default]), UsedName(:=,[Default]), UsedName(asInstanceOf,[Default]), UsedName(specifiedDirection_=,[Default]), UsedName(_makeLit,[Default]), UsedName(widthOption,[Default]), UsedName(className,[Default]), UsedName(_cloneTypeImpl,[Default]), UsedName(binding_=,[Default]), UsedName($init$,[Default]), UsedName(_assignCompatibilityExplicitDirection,[Default]), UsedName(ignoreSeq,[Default]), UsedName(elements,[Default]), UsedName(do_asUInt,[Default]), UsedName(getWidth,[Default]), UsedName(width,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(_onModuleClose,[Default]), UsedName(direction,[Default]), UsedName(getClass,[Default]), UsedName(isInstanceOf,[Default]), UsedName(connectFromBits,[Default]), UsedName(binding,[Default]), UsedName(ne,[Default]), UsedName(EXStage_MEM_IO,[Default]), UsedName(reifyTarget,[Default]), UsedName(_parent,[Default]), UsedName(toPrintableHelper,[Default]), UsedName(finalize,[Default]), UsedName(specifiedDirection,[Default]), UsedName(eq,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(cloneType,[Default]), UsedName(legacyConnect,[Default]), UsedName(setRef,[Default]), UsedName(ALUData,[Default]), UsedName(clone,[Default]), UsedName(ref,[Default]), UsedName(toNamed,[Default]), UsedName(litOption,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(stringAccessor,[Default]), UsedName(topBindingOpt,[Default]), UsedName(forceName,[Default]), UsedName(instanceName,[Default]), UsedName(seedOpt,[Default]), UsedName(typeEquivalent,[Default]), UsedName(bind,[Default]), UsedName(addAutoPostnameHook,[Default]), UsedName(bulkConnect,[Default]), UsedName(reifyParent,[Default]), UsedName(allElements,[Default]), UsedName(connect,[Default]), UsedName(isSynthesizable,[Default]), UsedName(wait,[Default]), UsedName(flatten,[Default]), UsedName(_computeName,[Default]), UsedName(isLit,[Default]), UsedName(suggestName,[Default]), UsedName(forceFinalName,[Default]), UsedName(notifyAll,[Default]), UsedName(toPrintable,[Default]), UsedName(getPublicFields,[Default]), UsedName(topBinding,[Default]), UsedName(hasSeed,[Default]), UsedName(<>,[Default]), UsedName(parentNameOpt,[Default]), UsedName(==,[Default]), UsedName(bindingToString,[Default]), UsedName(_circuit,[Default]), UsedName(bind$default$2,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(badConnect,[Default]), UsedName(asTypeOf,[Default]), UsedName(##,[Default]), UsedName(getElements,[Default]))) invalidates 1 classes due to The miniCore.EXStage_MEM_IO has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(compileOptions,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(miniCore.EXStage_MEM_IO)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from miniCore.EXStage_ID_IO...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: miniCore.EXStage_ID_IO[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(miniCore.EXStage_ID_IO)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(miniCore.EXStage_ID_IO,ModifiedNames(changes = UsedName(do_asTypeOf,[Default]), UsedName(pathName,[Default]), UsedName(_bindingToString,[Default]), UsedName(!=,[Default]), UsedName(parentModName,[Default]), UsedName(toTarget,[Default]), UsedName(circuitName,[Default]), UsedName(earlyName,[Default]), UsedName(EXStage_ID_IO,[Default]), UsedName(direction_=,[Default]), UsedName(autoSeed,[Default]), UsedName(lref,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(cloneTypeFull,[Default]), UsedName(parentPathName,[Default]), UsedName(litValue,[Default]), UsedName(asUInt,[Default]), UsedName(isWidthKnown,[Default]), UsedName(_usingPlugin,[Default]), UsedName(getOptionRef,[Default]), UsedName(compileOptions,[Implicit]), UsedName(hashCode,[Default]), UsedName(setAllParents,[Default]), UsedName(_id,[Default]), UsedName(getRef,[Default]), UsedName(:=,[Default]), UsedName(asInstanceOf,[Default]), UsedName(specifiedDirection_=,[Default]), UsedName(_makeLit,[Default]), UsedName(widthOption,[Default]), UsedName(className,[Default]), UsedName(_cloneTypeImpl,[Default]), UsedName(binding_=,[Default]), UsedName($init$,[Default]), UsedName(_assignCompatibilityExplicitDirection,[Default]), UsedName(ignoreSeq,[Default]), UsedName(elements,[Default]), UsedName(do_asUInt,[Default]), UsedName(getWidth,[Default]), UsedName(width,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(_onModuleClose,[Default]), UsedName(direction,[Default]), UsedName(getClass,[Default]), UsedName(isInstanceOf,[Default]), UsedName(connectFromBits,[Default]), UsedName(binding,[Default]), UsedName(ne,[Default]), UsedName(reifyTarget,[Default]), UsedName(_parent,[Default]), UsedName(toPrintableHelper,[Default]), UsedName(finalize,[Default]), UsedName(specifiedDirection,[Default]), UsedName(eq,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(cloneType,[Default]), UsedName(legacyConnect,[Default]), UsedName(setRef,[Default]), UsedName(clone,[Default]), UsedName(miniCore;EXStage_ID_IO;init;,[Default]), UsedName(ref,[Default]), UsedName(toNamed,[Default]), UsedName(litOption,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(stringAccessor,[Default]), UsedName(topBindingOpt,[Default]), UsedName(forceName,[Default]), UsedName(instanceName,[Default]), UsedName(seedOpt,[Default]), UsedName(typeEquivalent,[Default]), UsedName(bind,[Default]), UsedName(addAutoPostnameHook,[Default]), UsedName(bulkConnect,[Default]), UsedName(reifyParent,[Default]), UsedName(allElements,[Default]), UsedName(connect,[Default]), UsedName(isSynthesizable,[Default]), UsedName(wait,[Default]), UsedName(flatten,[Default]), UsedName(_computeName,[Default]), UsedName(isLit,[Default]), UsedName(suggestName,[Default]), UsedName(forceFinalName,[Default]), UsedName(notifyAll,[Default]), UsedName(toPrintable,[Default]), UsedName(getPublicFields,[Default]), UsedName(topBinding,[Default]), UsedName(hasSeed,[Default]), UsedName(<>,[Default]), UsedName(ID_B,[Default]), UsedName(parentNameOpt,[Default]), UsedName(==,[Default]), UsedName(bindingToString,[Default]), UsedName(ID_A,[Default]), UsedName(_circuit,[Default]), UsedName(bind$default$2,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(badConnect,[Default]), UsedName(asTypeOf,[Default]), UsedName(##,[Default]), UsedName(getElements,[Default]))) invalidates 1 classes due to The miniCore.EXStage_ID_IO has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(compileOptions,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(miniCore.EXStage_ID_IO)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from WordALU_MEM_IO...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: WordALU_MEM_IO[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(WordALU_MEM_IO)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(WordALU_MEM_IO,ModifiedNames(changes = UsedName(do_asTypeOf,[Default]), UsedName(pathName,[Default]), UsedName(_bindingToString,[Default]), UsedName(!=,[Default]), UsedName(parentModName,[Default]), UsedName(toTarget,[Default]), UsedName(circuitName,[Default]), UsedName(earlyName,[Default]), UsedName(WordALU_MEM_IO;init;,[Default]), UsedName(direction_=,[Default]), UsedName(autoSeed,[Default]), UsedName(lref,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(cloneTypeFull,[Default]), UsedName(parentPathName,[Default]), UsedName(litValue,[Default]), UsedName(asUInt,[Default]), UsedName(isWidthKnown,[Default]), UsedName(_usingPlugin,[Default]), UsedName(getOptionRef,[Default]), UsedName(compileOptions,[Implicit]), UsedName(hashCode,[Default]), UsedName(setAllParents,[Default]), UsedName(_id,[Default]), UsedName(getRef,[Default]), UsedName(:=,[Default]), UsedName(asInstanceOf,[Default]), UsedName(specifiedDirection_=,[Default]), UsedName(_makeLit,[Default]), UsedName(widthOption,[Default]), UsedName(className,[Default]), UsedName(_cloneTypeImpl,[Default]), UsedName(binding_=,[Default]), UsedName($init$,[Default]), UsedName(_assignCompatibilityExplicitDirection,[Default]), UsedName(ignoreSeq,[Default]), UsedName(elements,[Default]), UsedName(do_asUInt,[Default]), UsedName(getWidth,[Default]), UsedName(WordALUOut,[Default]), UsedName(width,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(_onModuleClose,[Default]), UsedName(direction,[Default]), UsedName(getClass,[Default]), UsedName(isInstanceOf,[Default]), UsedName(connectFromBits,[Default]), UsedName(binding,[Default]), UsedName(ne,[Default]), UsedName(reifyTarget,[Default]), UsedName(_parent,[Default]), UsedName(toPrintableHelper,[Default]), UsedName(finalize,[Default]), UsedName(specifiedDirection,[Default]), UsedName(eq,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(cloneType,[Default]), UsedName(legacyConnect,[Default]), UsedName(setRef,[Default]), UsedName(clone,[Default]), UsedName(ref,[Default]), UsedName(toNamed,[Default]), UsedName(litOption,[Default]), UsedName(synchronized,[Default]), UsedName(WordALU_MEM_IO,[Default]), UsedName(notify,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(stringAccessor,[Default]), UsedName(topBindingOpt,[Default]), UsedName(forceName,[Default]), UsedName(instanceName,[Default]), UsedName(seedOpt,[Default]), UsedName(typeEquivalent,[Default]), UsedName(bind,[Default]), UsedName(addAutoPostnameHook,[Default]), UsedName(bulkConnect,[Default]), UsedName(reifyParent,[Default]), UsedName(allElements,[Default]), UsedName(connect,[Default]), UsedName(isSynthesizable,[Default]), UsedName(wait,[Default]), UsedName(flatten,[Default]), UsedName(_computeName,[Default]), UsedName(isLit,[Default]), UsedName(suggestName,[Default]), UsedName(forceFinalName,[Default]), UsedName(notifyAll,[Default]), UsedName(toPrintable,[Default]), UsedName(getPublicFields,[Default]), UsedName(topBinding,[Default]), UsedName(hasSeed,[Default]), UsedName(<>,[Default]), UsedName(parentNameOpt,[Default]), UsedName(==,[Default]), UsedName(bindingToString,[Default]), UsedName(_circuit,[Default]), UsedName(bind$default$2,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(badConnect,[Default]), UsedName(asTypeOf,[Default]), UsedName(##,[Default]), UsedName(getElements,[Default]))) invalidates 1 classes due to The WordALU_MEM_IO has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(compileOptions,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(WordALU_MEM_IO)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from miniCore.EXStage_IO...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: miniCore.EXStage_IO[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(miniCore.EXStage_IO)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(miniCore.EXStage_IO,ModifiedNames(changes = UsedName(do_asTypeOf,[Default]), UsedName(pathName,[Default]), UsedName(_bindingToString,[Default]), UsedName(!=,[Default]), UsedName(parentModName,[Default]), UsedName(toTarget,[Default]), UsedName(circuitName,[Default]), UsedName(earlyName,[Default]), UsedName(direction_=,[Default]), UsedName(autoSeed,[Default]), UsedName(lref,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(cloneTypeFull,[Default]), UsedName(parentPathName,[Default]), UsedName(litValue,[Default]), UsedName(asUInt,[Default]), UsedName(isWidthKnown,[Default]), UsedName(_usingPlugin,[Default]), UsedName(getOptionRef,[Default]), UsedName(compileOptions,[Implicit]), UsedName(hashCode,[Default]), UsedName(ID,[Default]), UsedName(setAllParents,[Default]), UsedName(_id,[Default]), UsedName(getRef,[Default]), UsedName(:=,[Default]), UsedName(asInstanceOf,[Default]), UsedName(specifiedDirection_=,[Default]), UsedName(_makeLit,[Default]), UsedName(widthOption,[Default]), UsedName(className,[Default]), UsedName(_cloneTypeImpl,[Default]), UsedName(binding_=,[Default]), UsedName($init$,[Default]), UsedName(_assignCompatibilityExplicitDirection,[Default]), UsedName(ignoreSeq,[Default]), UsedName(elements,[Default]), UsedName(do_asUInt,[Default]), UsedName(getWidth,[Default]), UsedName(width,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(_onModuleClose,[Default]), UsedName(direction,[Default]), UsedName(getClass,[Default]), UsedName(isInstanceOf,[Default]), UsedName(connectFromBits,[Default]), UsedName(binding,[Default]), UsedName(EXStage_IO,[Default]), UsedName(ne,[Default]), UsedName(reifyTarget,[Default]), UsedName(_parent,[Default]), UsedName(toPrintableHelper,[Default]), UsedName(finalize,[Default]), UsedName(specifiedDirection,[Default]), UsedName(eq,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(cloneType,[Default]), UsedName(legacyConnect,[Default]), UsedName(setRef,[Default]), UsedName(clone,[Default]), UsedName(ref,[Default]), UsedName(toNamed,[Default]), UsedName(litOption,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(stringAccessor,[Default]), UsedName(topBindingOpt,[Default]), UsedName(forceName,[Default]), UsedName(instanceName,[Default]), UsedName(seedOpt,[Default]), UsedName(typeEquivalent,[Default]), UsedName(bind,[Default]), UsedName(addAutoPostnameHook,[Default]), UsedName(bulkConnect,[Default]), UsedName(miniCore;EXStage_IO;init;,[Default]), UsedName(reifyParent,[Default]), UsedName(allElements,[Default]), UsedName(connect,[Default]), UsedName(isSynthesizable,[Default]), UsedName(wait,[Default]), UsedName(MEM,[Default]), UsedName(flatten,[Default]), UsedName(_computeName,[Default]), UsedName(isLit,[Default]), UsedName(suggestName,[Default]), UsedName(forceFinalName,[Default]), UsedName(notifyAll,[Default]), UsedName(toPrintable,[Default]), UsedName(getPublicFields,[Default]), UsedName(topBinding,[Default]), UsedName(hasSeed,[Default]), UsedName(<>,[Default]), UsedName(parentNameOpt,[Default]), UsedName(==,[Default]), UsedName(bindingToString,[Default]), UsedName(_circuit,[Default]), UsedName(bind$default$2,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(badConnect,[Default]), UsedName(asTypeOf,[Default]), UsedName(##,[Default]), UsedName(getElements,[Default]))) invalidates 1 classes due to The miniCore.EXStage_IO has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(compileOptions,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(miniCore.EXStage_IO)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from WordALU_IO...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: WordALU_IO[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(WordALU_IO)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(WordALU_IO,ModifiedNames(changes = UsedName(do_asTypeOf,[Default]), UsedName(pathName,[Default]), UsedName(_bindingToString,[Default]), UsedName(!=,[Default]), UsedName(parentModName,[Default]), UsedName(toTarget,[Default]), UsedName(circuitName,[Default]), UsedName(earlyName,[Default]), UsedName(direction_=,[Default]), UsedName(autoSeed,[Default]), UsedName(lref,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(cloneTypeFull,[Default]), UsedName(parentPathName,[Default]), UsedName(litValue,[Default]), UsedName(asUInt,[Default]), UsedName(isWidthKnown,[Default]), UsedName(_usingPlugin,[Default]), UsedName(getOptionRef,[Default]), UsedName(compileOptions,[Implicit]), UsedName(hashCode,[Default]), UsedName(ID,[Default]), UsedName(setAllParents,[Default]), UsedName(_id,[Default]), UsedName(getRef,[Default]), UsedName(:=,[Default]), UsedName(asInstanceOf,[Default]), UsedName(specifiedDirection_=,[Default]), UsedName(_makeLit,[Default]), UsedName(widthOption,[Default]), UsedName(className,[Default]), UsedName(_cloneTypeImpl,[Default]), UsedName(binding_=,[Default]), UsedName($init$,[Default]), UsedName(_assignCompatibilityExplicitDirection,[Default]), UsedName(ignoreSeq,[Default]), UsedName(elements,[Default]), UsedName(do_asUInt,[Default]), UsedName(getWidth,[Default]), UsedName(width,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(_onModuleClose,[Default]), UsedName(direction,[Default]), UsedName(getClass,[Default]), UsedName(isInstanceOf,[Default]), UsedName(connectFromBits,[Default]), UsedName(binding,[Default]), UsedName(ne,[Default]), UsedName(reifyTarget,[Default]), UsedName(_parent,[Default]), UsedName(toPrintableHelper,[Default]), UsedName(finalize,[Default]), UsedName(specifiedDirection,[Default]), UsedName(eq,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(cloneType,[Default]), UsedName(legacyConnect,[Default]), UsedName(setRef,[Default]), UsedName(clone,[Default]), UsedName(ref,[Default]), UsedName(toNamed,[Default]), UsedName(litOption,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(stringAccessor,[Default]), UsedName(topBindingOpt,[Default]), UsedName(forceName,[Default]), UsedName(instanceName,[Default]), UsedName(seedOpt,[Default]), UsedName(typeEquivalent,[Default]), UsedName(bind,[Default]), UsedName(addAutoPostnameHook,[Default]), UsedName(bulkConnect,[Default]), UsedName(reifyParent,[Default]), UsedName(allElements,[Default]), UsedName(connect,[Default]), UsedName(isSynthesizable,[Default]), UsedName(wait,[Default]), UsedName(MEM,[Default]), UsedName(flatten,[Default]), UsedName(_computeName,[Default]), UsedName(isLit,[Default]), UsedName(suggestName,[Default]), UsedName(forceFinalName,[Default]), UsedName(notifyAll,[Default]), UsedName(toPrintable,[Default]), UsedName(getPublicFields,[Default]), UsedName(topBinding,[Default]), UsedName(hasSeed,[Default]), UsedName(<>,[Default]), UsedName(WordALU_IO;init;,[Default]), UsedName(parentNameOpt,[Default]), UsedName(==,[Default]), UsedName(bindingToString,[Default]), UsedName(_circuit,[Default]), UsedName(bind$default$2,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(badConnect,[Default]), UsedName(asTypeOf,[Default]), UsedName(WordALU_IO,[Default]), UsedName(##,[Default]), UsedName(getElements,[Default]))) invalidates 1 classes due to The WordALU_IO has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(compileOptions,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(WordALU_IO)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from miniCore.ALU...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: miniCore.ALU[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(miniCore.ALU)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(miniCore.ALU,ModifiedNames(changes = UsedName(initializeInParent,[Default]), UsedName(pathName,[Default]), UsedName(opXor,[Default]), UsedName(!=,[Default]), UsedName(parentModName,[Default]), UsedName(toTarget,[Default]), UsedName(circuitName,[Default]), UsedName(opSub,[Default]), UsedName(addCommand,[Default]), UsedName(autoSeed,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(getChiselPorts,[Default]), UsedName(opURShift,[Default]), UsedName(parentPathName,[Default]), UsedName(ALU,[Default]), UsedName(closeUnboundIds,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(getOptionRef,[Default]), UsedName(getPorts,[Default]), UsedName(reset,[Default]), UsedName(hashCode,[Default]), UsedName(_id,[Default]), UsedName(getModulePorts,[Default]), UsedName(getRef,[Default]), UsedName(asInstanceOf,[Default]), UsedName(src1,[Default]), UsedName(addId,[Default]), UsedName(op,[Default]), UsedName($init$,[Default]), UsedName(opULess,[Default]), UsedName(findPort,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName(override_reset_=,[Default]), UsedName(compileOptions,[Default]), UsedName(opSLess,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(_onModuleClose,[Default]), UsedName(name,[Default]), UsedName(nameIds,[Default]), UsedName(getIds,[Default]), UsedName(getClass,[Default]), UsedName(override_reset,[Default]), UsedName(isInstanceOf,[Default]), UsedName(shamt,[Default]), UsedName(ne,[Default]), UsedName(reifyTarget,[Default]), UsedName(_parent,[Default]), UsedName(finalize,[Default]), UsedName(eq,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(miniCore;ALU;init;,[Default]), UsedName(getTarget,[Default]), UsedName(IO,[Default]), UsedName(portsSize,[Default]), UsedName(setRef,[Default]), UsedName(_component,[Default]), UsedName(_lastId,[Default]), UsedName(clone,[Default]), UsedName(generateComponent,[Default]), UsedName(getCommands,[Default]), UsedName(opOr,[Default]), UsedName(opSRShift,[Default]), UsedName(toNamed,[Default]), UsedName(synchronized,[Default]), UsedName(clock,[Default]), UsedName(_closed,[Default]), UsedName(notify,[Default]), UsedName(toString,[Default]), UsedName(out,[Default]), UsedName(equals,[Default]), UsedName(bindIoInPlace,[Default]), UsedName(override_clock_=,[Default]), UsedName(forceName,[Default]), UsedName(instanceName,[Default]), UsedName(seedOpt,[Default]), UsedName(desiredName,[Default]), UsedName(addAutoPostnameHook,[Default]), UsedName(mkReset,[Default]), UsedName(reifyParent,[Default]), UsedName(wait,[Default]), UsedName(_namespace,[Default]), UsedName(_computeName,[Default]), UsedName(opAdd,[Default]), UsedName(opLShift,[Default]), UsedName(portsContains,[Default]), UsedName(isClosed,[Default]), UsedName(suggestName,[Default]), UsedName(override_clock,[Default]), UsedName(forceFinalName,[Default]), UsedName(notifyAll,[Default]), UsedName(getPublicFields,[Default]), UsedName(hasSeed,[Default]), UsedName(opAnd,[Default]), UsedName(==,[Default]), UsedName(src2,[Default]), UsedName(_circuit,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(io,[Default]), UsedName(##,[Default]), UsedName(namePorts,[Default]))) invalidates 1 classes due to The miniCore.ALU has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(initializeInParent,[Default]), UsedName(pathName,[Default]), UsedName(opXor,[Default]), UsedName(!=,[Default]), UsedName(parentModName,[Default]), UsedName(toTarget,[Default]), UsedName(circuitName,[Default]), UsedName(opSub,[Default]), UsedName(addCommand,[Default]), UsedName(autoSeed,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(getChiselPorts,[Default]), UsedName(opURShift,[Default]), UsedName(parentPathName,[Default]), UsedName(ALU,[Default]), UsedName(closeUnboundIds,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(getOptionRef,[Default]), UsedName(getPorts,[Default]), UsedName(reset,[Default]), UsedName(hashCode,[Default]), UsedName(_id,[Default]), UsedName(getModulePorts,[Default]), UsedName(getRef,[Default]), UsedName(asInstanceOf,[Default]), UsedName(src1,[Default]), UsedName(addId,[Default]), UsedName(op,[Default]), UsedName($init$,[Default]), UsedName(opULess,[Default]), UsedName(findPort,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName(override_reset_=,[Default]), UsedName(compileOptions,[Default]), UsedName(opSLess,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(_onModuleClose,[Default]), UsedName(name,[Default]), UsedName(nameIds,[Default]), UsedName(getIds,[Default]), UsedName(getClass,[Default]), UsedName(override_reset,[Default]), UsedName(isInstanceOf,[Default]), UsedName(shamt,[Default]), UsedName(ne,[Default]), UsedName(reifyTarget,[Default]), UsedName(_parent,[Default]), UsedName(finalize,[Default]), UsedName(eq,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(miniCore;ALU;init;,[Default]), UsedName(getTarget,[Default]), UsedName(IO,[Default]), UsedName(portsSize,[Default]), UsedName(setRef,[Default]), UsedName(_component,[Default]), UsedName(_lastId,[Default]), UsedName(clone,[Default]), UsedName(generateComponent,[Default]), UsedName(getCommands,[Default]), UsedName(opOr,[Default]), UsedName(opSRShift,[Default]), UsedName(toNamed,[Default]), UsedName(synchronized,[Default]), UsedName(clock,[Default]), UsedName(_closed,[Default]), UsedName(notify,[Default]), UsedName(toString,[Default]), UsedName(out,[Default]), UsedName(equals,[Default]), UsedName(bindIoInPlace,[Default]), UsedName(override_clock_=,[Default]), UsedName(forceName,[Default]), UsedName(instanceName,[Default]), UsedName(seedOpt,[Default]), UsedName(desiredName,[Default]), UsedName(addAutoPostnameHook,[Default]), UsedName(mkReset,[Default]), UsedName(reifyParent,[Default]), UsedName(wait,[Default]), UsedName(_namespace,[Default]), UsedName(_computeName,[Default]), UsedName(opAdd,[Default]), UsedName(opLShift,[Default]), UsedName(portsContains,[Default]), UsedName(isClosed,[Default]), UsedName(suggestName,[Default]), UsedName(override_clock,[Default]), UsedName(forceFinalName,[Default]), UsedName(notifyAll,[Default]), UsedName(getPublicFields,[Default]), UsedName(hasSeed,[Default]), UsedName(opAnd,[Default]), UsedName(==,[Default]), UsedName(src2,[Default]), UsedName(_circuit,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(io,[Default]), UsedName(##,[Default]), UsedName(namePorts,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(miniCore.ALU)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from miniCore.ALU_IO...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: miniCore.ALU_IO[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(miniCore.ALU_IO)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(miniCore.ALU_IO,ModifiedNames(changes = UsedName(do_asTypeOf,[Default]), UsedName(pathName,[Default]), UsedName(_bindingToString,[Default]), UsedName(!=,[Default]), UsedName(parentModName,[Default]), UsedName(toTarget,[Default]), UsedName(circuitName,[Default]), UsedName(earlyName,[Default]), UsedName(direction_=,[Default]), UsedName(autoSeed,[Default]), UsedName(lref,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(cloneTypeFull,[Default]), UsedName(parentPathName,[Default]), UsedName(litValue,[Default]), UsedName(asUInt,[Default]), UsedName(isWidthKnown,[Default]), UsedName(_usingPlugin,[Default]), UsedName(getOptionRef,[Default]), UsedName(compileOptions,[Implicit]), UsedName(hashCode,[Default]), UsedName(ID,[Default]), UsedName(setAllParents,[Default]), UsedName(_id,[Default]), UsedName(getRef,[Default]), UsedName(:=,[Default]), UsedName(asInstanceOf,[Default]), UsedName(specifiedDirection_=,[Default]), UsedName(_makeLit,[Default]), UsedName(widthOption,[Default]), UsedName(className,[Default]), UsedName(_cloneTypeImpl,[Default]), UsedName(binding_=,[Default]), UsedName($init$,[Default]), UsedName(_assignCompatibilityExplicitDirection,[Default]), UsedName(ignoreSeq,[Default]), UsedName(elements,[Default]), UsedName(do_asUInt,[Default]), UsedName(getWidth,[Default]), UsedName(width,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(_onModuleClose,[Default]), UsedName(direction,[Default]), UsedName(getClass,[Default]), UsedName(isInstanceOf,[Default]), UsedName(connectFromBits,[Default]), UsedName(binding,[Default]), UsedName(ne,[Default]), UsedName(reifyTarget,[Default]), UsedName(_parent,[Default]), UsedName(toPrintableHelper,[Default]), UsedName(finalize,[Default]), UsedName(specifiedDirection,[Default]), UsedName(eq,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(cloneType,[Default]), UsedName(legacyConnect,[Default]), UsedName(setRef,[Default]), UsedName(clone,[Default]), UsedName(ref,[Default]), UsedName(toNamed,[Default]), UsedName(litOption,[Default]), UsedName(miniCore;ALU_IO;init;,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(stringAccessor,[Default]), UsedName(ALU_IO,[Default]), UsedName(topBindingOpt,[Default]), UsedName(forceName,[Default]), UsedName(instanceName,[Default]), UsedName(seedOpt,[Default]), UsedName(typeEquivalent,[Default]), UsedName(bind,[Default]), UsedName(addAutoPostnameHook,[Default]), UsedName(bulkConnect,[Default]), UsedName(reifyParent,[Default]), UsedName(allElements,[Default]), UsedName(connect,[Default]), UsedName(isSynthesizable,[Default]), UsedName(wait,[Default]), UsedName(MEM,[Default]), UsedName(flatten,[Default]), UsedName(_computeName,[Default]), UsedName(isLit,[Default]), UsedName(suggestName,[Default]), UsedName(forceFinalName,[Default]), UsedName(notifyAll,[Default]), UsedName(toPrintable,[Default]), UsedName(getPublicFields,[Default]), UsedName(topBinding,[Default]), UsedName(hasSeed,[Default]), UsedName(<>,[Default]), UsedName(parentNameOpt,[Default]), UsedName(==,[Default]), UsedName(bindingToString,[Default]), UsedName(_circuit,[Default]), UsedName(bind$default$2,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(badConnect,[Default]), UsedName(asTypeOf,[Default]), UsedName(##,[Default]), UsedName(getElements,[Default]))) invalidates 1 classes due to The miniCore.ALU_IO has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(compileOptions,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(miniCore.ALU_IO)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from miniCore.EXStage...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: miniCore.EXStage[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(miniCore.EXStage)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(miniCore.EXStage,ModifiedNames(changes = UsedName(s1Zero,[Default]), UsedName(initializeInParent,[Default]), UsedName(pathName,[Default]), UsedName(!=,[Default]), UsedName(RData2,[Default]), UsedName(delayedInit,[Default]), UsedName(parentModName,[Default]), UsedName(s1PC,[Default]), UsedName(toTarget,[Default]), UsedName(circuitName,[Default]), UsedName(PC,[Default]), UsedName(ALUSrc2Ctrl,[Default]), UsedName(addCommand,[Default]), UsedName(autoSeed,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(getChiselPorts,[Default]), UsedName(parentPathName,[Default]), UsedName(ALU,[Default]), UsedName(closeUnboundIds,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(getOptionRef,[Default]), UsedName(getPorts,[Default]), UsedName(reset,[Default]), UsedName(hashCode,[Default]), UsedName(s2Four,[Default]), UsedName(_id,[Default]), UsedName(getModulePorts,[Default]), UsedName(WordALUOP,[Default]), UsedName(getRef,[Default]), UsedName(asInstanceOf,[Default]), UsedName(s2None,[Default]), UsedName(ALUOP,[Default]), UsedName(addId,[Default]), UsedName($init$,[Default]), UsedName(findPort,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName(RData1,[Default]), UsedName(override_reset_=,[Default]), UsedName(compileOptions,[Default]), UsedName(s2Imm,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(_onModuleClose,[Default]), UsedName(name,[Default]), UsedName(miniCore;EXStage;init;,[Default]), UsedName(nameIds,[Default]), UsedName(getIds,[Default]), UsedName(getClass,[Default]), UsedName(override_reset,[Default]), UsedName(isInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(reifyTarget,[Default]), UsedName(_parent,[Default]), UsedName(finalize,[Default]), UsedName(eq,[Default]), UsedName(WordALU,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(Imm,[Default]), UsedName(getTarget,[Default]), UsedName(IO,[Default]), UsedName(portsSize,[Default]), UsedName(setRef,[Default]), UsedName(_component,[Default]), UsedName(s2Rs2,[Default]), UsedName(_lastId,[Default]), UsedName(clone,[Default]), UsedName(generateComponent,[Default]), UsedName(getCommands,[Default]), UsedName(s1None,[Default]), UsedName(s1Rs1,[Default]), UsedName(toNamed,[Default]), UsedName(synchronized,[Default]), UsedName(clock,[Default]), UsedName(_closed,[Default]), UsedName(notify,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(bindIoInPlace,[Default]), UsedName(main,[Default]), UsedName(override_clock_=,[Default]), UsedName(forceName,[Default]), UsedName(instanceName,[Default]), UsedName(seedOpt,[Default]), UsedName(desiredName,[Default]), UsedName(addAutoPostnameHook,[Default]), UsedName(mkReset,[Default]), UsedName(EXStage,[Default]), UsedName(reifyParent,[Default]), UsedName(wait,[Default]), UsedName(_namespace,[Default]), UsedName(_computeName,[Default]), UsedName(portsContains,[Default]), UsedName(s2CSR,[Default]), UsedName(isClosed,[Default]), UsedName(ALUSrc1Ctrl,[Default]), UsedName(suggestName,[Default]), UsedName(override_clock,[Default]), UsedName(forceFinalName,[Default]), UsedName(notifyAll,[Default]), UsedName(getPublicFields,[Default]), UsedName(hasSeed,[Default]), UsedName(Src2,[Default]), UsedName(WordALUEn,[Default]), UsedName(==,[Default]), UsedName(args,[Default]), UsedName(_circuit,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(Src1,[Default]), UsedName(io,[Default]), UsedName(executionStart,[Default]), UsedName(##,[Default]), UsedName(namePorts,[Default]))) invalidates 1 classes due to The miniCore.EXStage has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(s1Zero,[Default]), UsedName(initializeInParent,[Default]), UsedName(pathName,[Default]), UsedName(!=,[Default]), UsedName(RData2,[Default]), UsedName(delayedInit,[Default]), UsedName(parentModName,[Default]), UsedName(s1PC,[Default]), UsedName(toTarget,[Default]), UsedName(circuitName,[Default]), UsedName(PC,[Default]), UsedName(ALUSrc2Ctrl,[Default]), UsedName(addCommand,[Default]), UsedName(autoSeed,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(getChiselPorts,[Default]), UsedName(parentPathName,[Default]), UsedName(ALU,[Default]), UsedName(closeUnboundIds,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(getOptionRef,[Default]), UsedName(getPorts,[Default]), UsedName(reset,[Default]), UsedName(hashCode,[Default]), UsedName(s2Four,[Default]), UsedName(_id,[Default]), UsedName(getModulePorts,[Default]), UsedName(WordALUOP,[Default]), UsedName(getRef,[Default]), UsedName(asInstanceOf,[Default]), UsedName(s2None,[Default]), UsedName(ALUOP,[Default]), UsedName(addId,[Default]), UsedName($init$,[Default]), UsedName(findPort,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName(RData1,[Default]), UsedName(override_reset_=,[Default]), UsedName(compileOptions,[Default]), UsedName(s2Imm,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(_onModuleClose,[Default]), UsedName(name,[Default]), UsedName(miniCore;EXStage;init;,[Default]), UsedName(nameIds,[Default]), UsedName(getIds,[Default]), UsedName(getClass,[Default]), UsedName(override_reset,[Default]), UsedName(isInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(reifyTarget,[Default]), UsedName(_parent,[Default]), UsedName(finalize,[Default]), UsedName(eq,[Default]), UsedName(WordALU,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(Imm,[Default]), UsedName(getTarget,[Default]), UsedName(IO,[Default]), UsedName(portsSize,[Default]), UsedName(setRef,[Default]), UsedName(_component,[Default]), UsedName(s2Rs2,[Default]), UsedName(_lastId,[Default]), UsedName(clone,[Default]), UsedName(generateComponent,[Default]), UsedName(getCommands,[Default]), UsedName(s1None,[Default]), UsedName(s1Rs1,[Default]), UsedName(toNamed,[Default]), UsedName(synchronized,[Default]), UsedName(clock,[Default]), UsedName(_closed,[Default]), UsedName(notify,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(bindIoInPlace,[Default]), UsedName(main,[Default]), UsedName(override_clock_=,[Default]), UsedName(forceName,[Default]), UsedName(instanceName,[Default]), UsedName(seedOpt,[Default]), UsedName(desiredName,[Default]), UsedName(addAutoPostnameHook,[Default]), UsedName(mkReset,[Default]), UsedName(EXStage,[Default]), UsedName(reifyParent,[Default]), UsedName(wait,[Default]), UsedName(_namespace,[Default]), UsedName(_computeName,[Default]), UsedName(portsContains,[Default]), UsedName(s2CSR,[Default]), UsedName(isClosed,[Default]), UsedName(ALUSrc1Ctrl,[Default]), UsedName(suggestName,[Default]), UsedName(override_clock,[Default]), UsedName(forceFinalName,[Default]), UsedName(notifyAll,[Default]), UsedName(getPublicFields,[Default]), UsedName(hasSeed,[Default]), UsedName(Src2,[Default]), UsedName(WordALUEn,[Default]), UsedName(==,[Default]), UsedName(args,[Default]), UsedName(_circuit,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(Src1,[Default]), UsedName(io,[Default]), UsedName(executionStart,[Default]), UsedName(##,[Default]), UsedName(namePorts,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(miniCore.EXStage)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from miniCore.ALU_MEM_IO...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: miniCore.ALU_MEM_IO[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(miniCore.ALU_MEM_IO)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(miniCore.ALU_MEM_IO,ModifiedNames(changes = UsedName(do_asTypeOf,[Default]), UsedName(pathName,[Default]), UsedName(_bindingToString,[Default]), UsedName(!=,[Default]), UsedName(parentModName,[Default]), UsedName(toTarget,[Default]), UsedName(circuitName,[Default]), UsedName(earlyName,[Default]), UsedName(direction_=,[Default]), UsedName(autoSeed,[Default]), UsedName(lref,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(cloneTypeFull,[Default]), UsedName(parentPathName,[Default]), UsedName(litValue,[Default]), UsedName(asUInt,[Default]), UsedName(isWidthKnown,[Default]), UsedName(_usingPlugin,[Default]), UsedName(getOptionRef,[Default]), UsedName(compileOptions,[Implicit]), UsedName(hashCode,[Default]), UsedName(setAllParents,[Default]), UsedName(_id,[Default]), UsedName(getRef,[Default]), UsedName(:=,[Default]), UsedName(asInstanceOf,[Default]), UsedName(specifiedDirection_=,[Default]), UsedName(_makeLit,[Default]), UsedName(widthOption,[Default]), UsedName(className,[Default]), UsedName(_cloneTypeImpl,[Default]), UsedName(binding_=,[Default]), UsedName($init$,[Default]), UsedName(_assignCompatibilityExplicitDirection,[Default]), UsedName(ignoreSeq,[Default]), UsedName(elements,[Default]), UsedName(do_asUInt,[Default]), UsedName(getWidth,[Default]), UsedName(ALU_MEM_IO,[Default]), UsedName(width,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(_onModuleClose,[Default]), UsedName(direction,[Default]), UsedName(getClass,[Default]), UsedName(isInstanceOf,[Default]), UsedName(connectFromBits,[Default]), UsedName(binding,[Default]), UsedName(ne,[Default]), UsedName(reifyTarget,[Default]), UsedName(_parent,[Default]), UsedName(toPrintableHelper,[Default]), UsedName(finalize,[Default]), UsedName(specifiedDirection,[Default]), UsedName(eq,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(cloneType,[Default]), UsedName(legacyConnect,[Default]), UsedName(setRef,[Default]), UsedName(ALUData,[Default]), UsedName(clone,[Default]), UsedName(ref,[Default]), UsedName(toNamed,[Default]), UsedName(litOption,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(stringAccessor,[Default]), UsedName(topBindingOpt,[Default]), UsedName(forceName,[Default]), UsedName(instanceName,[Default]), UsedName(seedOpt,[Default]), UsedName(typeEquivalent,[Default]), UsedName(bind,[Default]), UsedName(addAutoPostnameHook,[Default]), UsedName(bulkConnect,[Default]), UsedName(reifyParent,[Default]), UsedName(allElements,[Default]), UsedName(connect,[Default]), UsedName(isSynthesizable,[Default]), UsedName(wait,[Default]), UsedName(flatten,[Default]), UsedName(_computeName,[Default]), UsedName(isLit,[Default]), UsedName(suggestName,[Default]), UsedName(forceFinalName,[Default]), UsedName(notifyAll,[Default]), UsedName(toPrintable,[Default]), UsedName(getPublicFields,[Default]), UsedName(topBinding,[Default]), UsedName(hasSeed,[Default]), UsedName(<>,[Default]), UsedName(parentNameOpt,[Default]), UsedName(==,[Default]), UsedName(bindingToString,[Default]), UsedName(miniCore;ALU_MEM_IO;init;,[Default]), UsedName(_circuit,[Default]), UsedName(bind$default$2,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(badConnect,[Default]), UsedName(asTypeOf,[Default]), UsedName(##,[Default]), UsedName(getElements,[Default]))) invalidates 1 classes due to The miniCore.ALU_MEM_IO has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(compileOptions,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(miniCore.ALU_MEM_IO)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from WordALU_ID_IO...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: WordALU_ID_IO[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(WordALU_ID_IO)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(WordALU_ID_IO,ModifiedNames(changes = UsedName(do_asTypeOf,[Default]), UsedName(pathName,[Default]), UsedName(_bindingToString,[Default]), UsedName(!=,[Default]), UsedName(parentModName,[Default]), UsedName(toTarget,[Default]), UsedName(circuitName,[Default]), UsedName(earlyName,[Default]), UsedName(direction_=,[Default]), UsedName(autoSeed,[Default]), UsedName(lref,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(cloneTypeFull,[Default]), UsedName(parentPathName,[Default]), UsedName(litValue,[Default]), UsedName(asUInt,[Default]), UsedName(isWidthKnown,[Default]), UsedName(_usingPlugin,[Default]), UsedName(getOptionRef,[Default]), UsedName(compileOptions,[Implicit]), UsedName(hashCode,[Default]), UsedName(setAllParents,[Default]), UsedName(_id,[Default]), UsedName(WordALUOP,[Default]), UsedName(getRef,[Default]), UsedName(:=,[Default]), UsedName(asInstanceOf,[Default]), UsedName(specifiedDirection_=,[Default]), UsedName(_makeLit,[Default]), UsedName(widthOption,[Default]), UsedName(className,[Default]), UsedName(_cloneTypeImpl,[Default]), UsedName(binding_=,[Default]), UsedName($init$,[Default]), UsedName(_assignCompatibilityExplicitDirection,[Default]), UsedName(WordALU_ID_IO,[Default]), UsedName(ignoreSeq,[Default]), UsedName(elements,[Default]), UsedName(do_asUInt,[Default]), UsedName(getWidth,[Default]), UsedName(width,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(_onModuleClose,[Default]), UsedName(direction,[Default]), UsedName(getClass,[Default]), UsedName(isInstanceOf,[Default]), UsedName(connectFromBits,[Default]), UsedName(binding,[Default]), UsedName(ne,[Default]), UsedName(reifyTarget,[Default]), UsedName(_parent,[Default]), UsedName(toPrintableHelper,[Default]), UsedName(finalize,[Default]), UsedName(specifiedDirection,[Default]), UsedName(eq,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(cloneType,[Default]), UsedName(legacyConnect,[Default]), UsedName(WordALU_ID_IO;init;,[Default]), UsedName(setRef,[Default]), UsedName(clone,[Default]), UsedName(ref,[Default]), UsedName(toNamed,[Default]), UsedName(litOption,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(stringAccessor,[Default]), UsedName(topBindingOpt,[Default]), UsedName(forceName,[Default]), UsedName(instanceName,[Default]), UsedName(seedOpt,[Default]), UsedName(typeEquivalent,[Default]), UsedName(bind,[Default]), UsedName(addAutoPostnameHook,[Default]), UsedName(bulkConnect,[Default]), UsedName(reifyParent,[Default]), UsedName(allElements,[Default]), UsedName(connect,[Default]), UsedName(isSynthesizable,[Default]), UsedName(wait,[Default]), UsedName(flatten,[Default]), UsedName(_computeName,[Default]), UsedName(isLit,[Default]), UsedName(suggestName,[Default]), UsedName(forceFinalName,[Default]), UsedName(notifyAll,[Default]), UsedName(toPrintable,[Default]), UsedName(getPublicFields,[Default]), UsedName(topBinding,[Default]), UsedName(hasSeed,[Default]), UsedName(<>,[Default]), UsedName(Src2,[Default]), UsedName(parentNameOpt,[Default]), UsedName(==,[Default]), UsedName(bindingToString,[Default]), UsedName(_circuit,[Default]), UsedName(bind$default$2,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(Src1,[Default]), UsedName(badConnect,[Default]), UsedName(asTypeOf,[Default]), UsedName(##,[Default]), UsedName(getElements,[Default]))) invalidates 1 classes due to The WordALU_ID_IO has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(compileOptions,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(WordALU_ID_IO)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from miniCore.WordALU...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: miniCore.WordALU[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(miniCore.WordALU)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(miniCore.WordALU,ModifiedNames(changes = UsedName(!=,[Default]), UsedName(delayedInit,[Default]), UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName($init$,[Default]), UsedName(getClass,[Default]), UsedName(isInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(finalize,[Default]), UsedName(eq,[Default]), UsedName(WordALU,[Default]), UsedName(clone,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(main,[Default]), UsedName(wait,[Default]), UsedName(notifyAll,[Default]), UsedName(==,[Default]), UsedName(args,[Default]), UsedName(executionStart,[Default]), UsedName(##,[Default]))) invalidates 1 classes due to The miniCore.WordALU has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(!=,[Default]), UsedName(delayedInit,[Default]), UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName($init$,[Default]), UsedName(getClass,[Default]), UsedName(isInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(finalize,[Default]), UsedName(eq,[Default]), UsedName(WordALU,[Default]), UsedName(clone,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(main,[Default]), UsedName(wait,[Default]), UsedName(notifyAll,[Default]), UsedName(==,[Default]), UsedName(args,[Default]), UsedName(executionStart,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(miniCore.WordALU)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from WordALU...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: WordALU[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(WordALU)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(WordALU,ModifiedNames(changes = UsedName(opWSRShift,[Default]), UsedName(initializeInParent,[Default]), UsedName(pathName,[Default]), UsedName(opWLShift,[Default]), UsedName(!=,[Default]), UsedName(delayedInit,[Default]), UsedName(parentModName,[Default]), UsedName(toTarget,[Default]), UsedName(circuitName,[Default]), UsedName(addCommand,[Default]), UsedName(autoSeed,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(getChiselPorts,[Default]), UsedName(parentPathName,[Default]), UsedName(closeUnboundIds,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(getOptionRef,[Default]), UsedName(getPorts,[Default]), UsedName(reset,[Default]), UsedName(hashCode,[Default]), UsedName(_id,[Default]), UsedName(getModulePorts,[Default]), UsedName(WordALUOP,[Default]), UsedName(getRef,[Default]), UsedName(asInstanceOf,[Default]), UsedName(addId,[Default]), UsedName($init$,[Default]), UsedName(opWURShift,[Default]), UsedName(findPort,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName(override_reset_=,[Default]), UsedName(compileOptions,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(_onModuleClose,[Default]), UsedName(outW,[Default]), UsedName(name,[Default]), UsedName(nameIds,[Default]), UsedName(getIds,[Default]), UsedName(getClass,[Default]), UsedName(override_reset,[Default]), UsedName(isInstanceOf,[Default]), UsedName(shamt,[Default]), UsedName(ne,[Default]), UsedName(reifyTarget,[Default]), UsedName(_parent,[Default]), UsedName(finalize,[Default]), UsedName(eq,[Default]), UsedName(WordALU,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(getTarget,[Default]), UsedName(IO,[Default]), UsedName(portsSize,[Default]), UsedName(setRef,[Default]), UsedName(_component,[Default]), UsedName(_lastId,[Default]), UsedName(clone,[Default]), UsedName(generateComponent,[Default]), UsedName(getCommands,[Default]), UsedName(opWSub,[Default]), UsedName(toNamed,[Default]), UsedName(synchronized,[Default]), UsedName(clock,[Default]), UsedName(_closed,[Default]), UsedName(notify,[Default]), UsedName(toString,[Default]), UsedName(out,[Default]), UsedName(equals,[Default]), UsedName(outDW,[Default]), UsedName(bindIoInPlace,[Default]), UsedName(main,[Default]), UsedName(override_clock_=,[Default]), UsedName(forceName,[Default]), UsedName(instanceName,[Default]), UsedName(seedOpt,[Default]), UsedName(desiredName,[Default]), UsedName(addAutoPostnameHook,[Default]), UsedName(WordALU;init;,[Default]), UsedName(mkReset,[Default]), UsedName(reifyParent,[Default]), UsedName(wait,[Default]), UsedName(_namespace,[Default]), UsedName(_computeName,[Default]), UsedName(portsContains,[Default]), UsedName(opWNone,[Default]), UsedName(isClosed,[Default]), UsedName(suggestName,[Default]), UsedName(override_clock,[Default]), UsedName(forceFinalName,[Default]), UsedName(notifyAll,[Default]), UsedName(getPublicFields,[Default]), UsedName(hasSeed,[Default]), UsedName(Src2,[Default]), UsedName(==,[Default]), UsedName(opWAdd,[Default]), UsedName(Src1W,[Default]), UsedName(args,[Default]), UsedName(_circuit,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(Src1,[Default]), UsedName(io,[Default]), UsedName(executionStart,[Default]), UsedName(##,[Default]), UsedName(namePorts,[Default]))) invalidates 1 classes due to The WordALU has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(opWSRShift,[Default]), UsedName(initializeInParent,[Default]), UsedName(pathName,[Default]), UsedName(opWLShift,[Default]), UsedName(!=,[Default]), UsedName(delayedInit,[Default]), UsedName(parentModName,[Default]), UsedName(toTarget,[Default]), UsedName(circuitName,[Default]), UsedName(addCommand,[Default]), UsedName(autoSeed,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(getChiselPorts,[Default]), UsedName(parentPathName,[Default]), UsedName(closeUnboundIds,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(getOptionRef,[Default]), UsedName(getPorts,[Default]), UsedName(reset,[Default]), UsedName(hashCode,[Default]), UsedName(_id,[Default]), UsedName(getModulePorts,[Default]), UsedName(WordALUOP,[Default]), UsedName(getRef,[Default]), UsedName(asInstanceOf,[Default]), UsedName(addId,[Default]), UsedName($init$,[Default]), UsedName(opWURShift,[Default]), UsedName(findPort,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName(override_reset_=,[Default]), UsedName(compileOptions,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(_onModuleClose,[Default]), UsedName(outW,[Default]), UsedName(name,[Default]), UsedName(nameIds,[Default]), UsedName(getIds,[Default]), UsedName(getClass,[Default]), UsedName(override_reset,[Default]), UsedName(isInstanceOf,[Default]), UsedName(shamt,[Default]), UsedName(ne,[Default]), UsedName(reifyTarget,[Default]), UsedName(_parent,[Default]), UsedName(finalize,[Default]), UsedName(eq,[Default]), UsedName(WordALU,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(getTarget,[Default]), UsedName(IO,[Default]), UsedName(portsSize,[Default]), UsedName(setRef,[Default]), UsedName(_component,[Default]), UsedName(_lastId,[Default]), UsedName(clone,[Default]), UsedName(generateComponent,[Default]), UsedName(getCommands,[Default]), UsedName(opWSub,[Default]), UsedName(toNamed,[Default]), UsedName(synchronized,[Default]), UsedName(clock,[Default]), UsedName(_closed,[Default]), UsedName(notify,[Default]), UsedName(toString,[Default]), UsedName(out,[Default]), UsedName(equals,[Default]), UsedName(outDW,[Default]), UsedName(bindIoInPlace,[Default]), UsedName(main,[Default]), UsedName(override_clock_=,[Default]), UsedName(forceName,[Default]), UsedName(instanceName,[Default]), UsedName(seedOpt,[Default]), UsedName(desiredName,[Default]), UsedName(addAutoPostnameHook,[Default]), UsedName(WordALU;init;,[Default]), UsedName(mkReset,[Default]), UsedName(reifyParent,[Default]), UsedName(wait,[Default]), UsedName(_namespace,[Default]), UsedName(_computeName,[Default]), UsedName(portsContains,[Default]), UsedName(opWNone,[Default]), UsedName(isClosed,[Default]), UsedName(suggestName,[Default]), UsedName(override_clock,[Default]), UsedName(forceFinalName,[Default]), UsedName(notifyAll,[Default]), UsedName(getPublicFields,[Default]), UsedName(hasSeed,[Default]), UsedName(Src2,[Default]), UsedName(==,[Default]), UsedName(opWAdd,[Default]), UsedName(Src1W,[Default]), UsedName(args,[Default]), UsedName(_circuit,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(Src1,[Default]), UsedName(io,[Default]), UsedName(executionStart,[Default]), UsedName(##,[Default]), UsedName(namePorts,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(WordALU)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from miniCore.ALU_ID_IO...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: miniCore.ALU_ID_IO[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(miniCore.ALU_ID_IO)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(miniCore.ALU_ID_IO,ModifiedNames(changes = UsedName(do_asTypeOf,[Default]), UsedName(pathName,[Default]), UsedName(_bindingToString,[Default]), UsedName(!=,[Default]), UsedName(parentModName,[Default]), UsedName(toTarget,[Default]), UsedName(circuitName,[Default]), UsedName(earlyName,[Default]), UsedName(direction_=,[Default]), UsedName(autoSeed,[Default]), UsedName(lref,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(cloneTypeFull,[Default]), UsedName(parentPathName,[Default]), UsedName(litValue,[Default]), UsedName(asUInt,[Default]), UsedName(isWidthKnown,[Default]), UsedName(_usingPlugin,[Default]), UsedName(getOptionRef,[Default]), UsedName(compileOptions,[Implicit]), UsedName(hashCode,[Default]), UsedName(miniCore;ALU_ID_IO;init;,[Default]), UsedName(setAllParents,[Default]), UsedName(_id,[Default]), UsedName(getRef,[Default]), UsedName(:=,[Default]), UsedName(asInstanceOf,[Default]), UsedName(specifiedDirection_=,[Default]), UsedName(ALUOP,[Default]), UsedName(_makeLit,[Default]), UsedName(widthOption,[Default]), UsedName(className,[Default]), UsedName(_cloneTypeImpl,[Default]), UsedName(binding_=,[Default]), UsedName($init$,[Default]), UsedName(_assignCompatibilityExplicitDirection,[Default]), UsedName(ignoreSeq,[Default]), UsedName(elements,[Default]), UsedName(do_asUInt,[Default]), UsedName(getWidth,[Default]), UsedName(width,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(_onModuleClose,[Default]), UsedName(direction,[Default]), UsedName(getClass,[Default]), UsedName(isInstanceOf,[Default]), UsedName(connectFromBits,[Default]), UsedName(binding,[Default]), UsedName(ne,[Default]), UsedName(reifyTarget,[Default]), UsedName(_parent,[Default]), UsedName(toPrintableHelper,[Default]), UsedName(finalize,[Default]), UsedName(specifiedDirection,[Default]), UsedName(eq,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(cloneType,[Default]), UsedName(legacyConnect,[Default]), UsedName(setRef,[Default]), UsedName(clone,[Default]), UsedName(ref,[Default]), UsedName(toNamed,[Default]), UsedName(litOption,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(stringAccessor,[Default]), UsedName(topBindingOpt,[Default]), UsedName(forceName,[Default]), UsedName(instanceName,[Default]), UsedName(seedOpt,[Default]), UsedName(typeEquivalent,[Default]), UsedName(bind,[Default]), UsedName(addAutoPostnameHook,[Default]), UsedName(bulkConnect,[Default]), UsedName(reifyParent,[Default]), UsedName(allElements,[Default]), UsedName(connect,[Default]), UsedName(isSynthesizable,[Default]), UsedName(wait,[Default]), UsedName(flatten,[Default]), UsedName(_computeName,[Default]), UsedName(isLit,[Default]), UsedName(suggestName,[Default]), UsedName(forceFinalName,[Default]), UsedName(notifyAll,[Default]), UsedName(toPrintable,[Default]), UsedName(getPublicFields,[Default]), UsedName(topBinding,[Default]), UsedName(hasSeed,[Default]), UsedName(<>,[Default]), UsedName(ALU_ID_IO,[Default]), UsedName(Src2,[Default]), UsedName(parentNameOpt,[Default]), UsedName(==,[Default]), UsedName(bindingToString,[Default]), UsedName(_circuit,[Default]), UsedName(bind$default$2,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(Src1,[Default]), UsedName(badConnect,[Default]), UsedName(asTypeOf,[Default]), UsedName(##,[Default]), UsedName(getElements,[Default]))) invalidates 1 classes due to The miniCore.ALU_ID_IO has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(compileOptions,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(miniCore.ALU_ID_IO)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: [0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0mFinal step, transitive dependencies:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNo classes were invalidated.[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 5.703572069 s[0m
[0m[[0m[0mdebug[0m] [0m[0mdone compiling[0m
